package com.testexample.approval.budgetapproval;

/**
 * This class was automatically generated by the data modeler tool.
 */

@javax.persistence.Entity
public class AuthUser implements java.io.Serializable {

    static final long serialVersionUID = 1L;

    @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO, generator = "AUTHUSER_ID_GENERATOR")
    @javax.persistence.Id
    @javax.persistence.SequenceGenerator(sequenceName = "AUTHUSER_ID_SEQ", name = "AUTHUSER_ID_GENERATOR")
    private java.lang.Long id;

    public AuthUser() {
    }
    
    public AuthUser(java.lang.Long id) {
        this.id = id;
    }

    public java.lang.Long getId() {
        return this.id;
    }
    
    public void setId(java.lang.Long id) {
        this.id = id;
    }
 public String doUserAut(String projectName) 
   {

      String application_Id = projectName;

      String ConStatus = "constatus";
      System.out.println("In method setUserAut");
      /*Connection c = null;
      Statement stmt = null;
      ResultSet rs = null;
      
      try
      {
         Class.forName("org.postgresql.Driver");
         System.out.println("Before  Driver");
         c = DriverManager.getConnection("jdbc:postgresql://localhost:5432/mytest", "postgres", "espl@2017");
         stmt = c.createStatement();
         String sql1 = "(select IN_USER.USER_NAME from IN_USER inner join SY_APPLICATION on SY_APPLICATION.APPLICATION_ID = in_user.APPLICATION_ID where SY_APPLICATION.APPLICATION_NAME ='" + application_Id + "')";

         rs = stmt.executeQuery(sql1);
         System.out.println("Current User");
         System.out.println("currentUser" + currentUser);
         while (rs.next())
         {
            String userOne = rs.getString("user_name");
           if (userOne == currentUser)
            {
               ConStatus = "yes";
            }
         }

      }
      catch (ClassNotFoundException e)
      {
         e.printStackTrace();
      }
      finally
      {
         rs.close();
         stmt.close();
         c.close();
      }*/
      return ConStatus;
   }
}