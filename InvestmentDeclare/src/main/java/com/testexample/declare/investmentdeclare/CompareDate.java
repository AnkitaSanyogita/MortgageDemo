package com.testexample.declare.investmentdeclare;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.sql.Date;

/**
 * This class was automatically generated by the data modeler tool.
 */

@javax.persistence.Entity
public class CompareDate implements java.io.Serializable
{
   static final long serialVersionUID = 1L;
ArrayList<String> emailIds = new ArrayList<>();
   @javax.persistence.GeneratedValue(strategy = javax.persistence.GenerationType.AUTO, generator = "COMPAREDATE_ID_GENERATOR")
   @javax.persistence.Id
   @javax.persistence.SequenceGenerator(sequenceName = "COMPAREDATE_ID_SEQ", name = "COMPAREDATE_ID_GENERATOR")
   private java.lang.Long id;

   private java.util.Date startDate;

   private java.util.Date endDate;

   private java.lang.Boolean sendMail;

   public void getDateDatabase() throws SQLException
   {/*
    System.out.println("org driver class");
    try
    {
    Class.forName("org.postgresql.Driver");
    }
    catch (ClassNotFoundException e)
    {
    e.printStackTrace();
    }
    System.out.println("Before  Driver");
    c = DriverManager.getConnection("jdbc:postgresql://localhost:5432/mytest", "postgres", "espl@2017");
    System.out.println("After  Driver");
    stmt = c.createStatement();
     */
   }

   public CompareDate()
   {
   }

   public java.lang.Long getId()
   {
      return this.id;
   }

   public void setId(java.lang.Long id)
   {
      this.id = id;
   }

   public java.util.Date getStartDate()
   {
      return this.startDate;
   }

   public void setStartDate(java.util.Date startDate) throws SQLException
   {
      /* getDateDatabase();
        ResultSet  rs = stmt.executeQuery("select datetime from date_triggers where triggers='startdate'");
        while(rs.next()){
         stDate=rs.getDate("datetime");
         System.out.println(stDate);
            }
              System.out.println("OUTside While St "+ stDate);*/
      this.startDate = startDate;
   }

   public java.util.Date getEndDate()
   {
      return this.endDate;
   }

   public void setEndDate(java.util.Date endDate) throws SQLException
   {
      /*getDateDatabase();
        ResultSet  rs1 = stmt.executeQuery("select datetime from date_triggers where triggers='stopdate'");
       while(rs1.next()){
        edDate=rs1.getDate("datetime");
        System.out.println(edDate);
           }
            System.out.println("OUTside While ed" + edDate);*/
      this.endDate = endDate;
   }

   public java.lang.Boolean getSendMail()
   {
      return this.sendMail;
   }

   public void setSendMail(java.lang.Boolean sendMail)
   {
      this.sendMail = sendMail;
   }

   public String connectPost(String toMail) throws SQLException
   {  Connection c=null;
   Statement stmt=null;
      ResultSet rs = null;
      System.out.println("org driver class");
      try
      {
         Class.forName("org.postgresql.Driver");
         System.out.println("Before  Driver");
         c = DriverManager.getConnection("jdbc:postgresql://localhost:5432/mytest", "postgres", "espl@2017");
         System.out.println("After  Driver");
         stmt = c.createStatement();

         rs = stmt.executeQuery("SELECT * from Employee");
         while (rs.next())
         {
            emailIds.add(rs.getString("Email_id"));
            //  System.out.println(rs.getString("Email_id"));
         }
      }
      catch (ClassNotFoundException e)
      {
         e.printStackTrace();
      }
      finally
      {
         rs.close();
         stmt.close();
         c.close();

      }

      toMail = emailIds.toString();
      toMail = toMail.replace(",", ";");
      toMail = toMail.substring(1, toMail.length() - 1);
      toMail = toMail.replaceAll("\\s+", "");
      System.out.println(toMail);

      return toMail;
   }

   public CompareDate(java.lang.Long id, java.util.Date startDate,
         java.util.Date endDate, java.lang.Boolean sendMail)
   {
      this.id = id;
      this.startDate = startDate;
      this.endDate = endDate;
      this.sendMail = sendMail;
   }

}